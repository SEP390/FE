import React from "react";
import { AppLayout } from "../components/layout/AppLayout.jsx";
import { Card, Typography, Table, Button, Tag } from "antd";
import { useNavigate } from "react-router-dom";
import { PlusOutlined } from "@ant-design/icons";

const { Text } = Typography;

export function MyRequest() {
    const navigate = useNavigate();

    // üß© D·ªØ li·ªáu m·∫´u
    const dataSource = [
        {
            key: "1",
            requestType: "ƒêƒÉng k√≠ check out",
            content: "Em ƒë√£ d·ªçn s·∫°ch gi∆∞·ªùng s·ªë 2 ph√≤ng H306R ƒë·ªÉ check out r·ªìi ·∫°",
            reply: "Ho√†n th√†nh. Em ki·ªÉm tra v√† ho√†n th√†nh h√≥a ƒë∆°n ph·ª• tr·ªôi (n·∫øu c√≥).",
            semester: "Spring - 2025",
            createdDate: "29/04/2025 21:58",
            status: "Checkout th√†nh c√¥ng",
            timeRange: "29/04/2025 21:55 ‚Üí 30/04/2025 10:10",
            managerComment: "C·∫£m ∆°n em ƒë√£ d·ªçn ph√≤ng s·∫°ch s·∫Ω, qu√° tr√¨nh check out su√¥n s·∫ª.",
        },
        {
            key: "2",
            requestType: "Y√™u c·∫ßu s·ª≠a ƒëi·ªán",
            content: "B√≥ng ƒë√®n ph√≤ng H205 b·ªã ch√°y, c·∫ßn thay m·ªõi.",
            reply: "ƒê√£ giao cho b·ªô ph·∫≠n k·ªπ thu·∫≠t x·ª≠ l√Ω trong h√¥m nay.",
            semester: "Spring - 2025",
            createdDate: "02/05/2025 09:40",
            status: "ƒêang x·ª≠ l√Ω",
            timeRange: "02/05/2025 09:38 ‚Üí 02/05/2025 10:00",
            managerComment: "K·ªπ thu·∫≠t vi√™n ƒëang ti·∫øn h√†nh ki·ªÉm tra h·ªá th·ªëng ƒëi·ªán khu H2.",
        },
    ];

    // üé® M√†u cho tr·∫°ng th√°i
    const statusColor = (status) => {
        if (status.includes("th√†nh c√¥ng")) return "green";
        if (status.includes("ƒêang x·ª≠ l√Ω")) return "blue";
        return "default";
    };

    // üßæ C·∫•u h√¨nh b·∫£ng
    const columns = [
        {
            title: "Request Type",
            dataIndex: "requestType",
            key: "requestType",
            width: 150,
            render: (text) => <Text strong>{text}</Text>,
        },
        {
            title: "Content",
            dataIndex: "content",
            key: "content",
            width: 250,
        },
        {
            title: "Reply",
            dataIndex: "reply",
            key: "reply",
            width: 250,
        },
        {
            title: "Semester",
            dataIndex: "semester",
            key: "semester",
            width: 130,
        },
        {
            title: "Created Date",
            dataIndex: "createdDate",
            key: "createdDate",
            width: 160,
        },
        {
            title: "Status",
            dataIndex: "status",
            key: "status",
            width: 160,
            render: (status) => <Tag color={statusColor(status)}>{status}</Tag>,
        },
        {
            title: "Details",
            key: "details",
            width: 130,
            render: (_, record) => (
                <Button type="link" onClick={() => navigate(`/request-detail/${record.key}`)}>
                    View
                </Button>
            ),
        },
    ];

    return (
        <AppLayout>
            <div className="p-4">
                {/* Ti√™u ƒë·ªÅ v√† n√∫t t·∫°o m·ªõi */}
                <div className="flex justify-between items-center mb-4">
                    <h1 className="text-2xl font-bold text-[#004aad]">My Requests</h1>
                    <Button
                        type="primary"
                        icon={<PlusOutlined />}
                        onClick={() => navigate("/create-request")}
                        style={{ backgroundColor: "#004aad" }}
                    >
                        Create new request
                    </Button>
                </div>

                {/* ƒê·∫øm s·ªë l∆∞·ª£ng y√™u c·∫ßu ƒëang x·ª≠ l√Ω */}
                <p className="text-green-600 mb-4">
                    Your processing CIM request:{" "}
                    {dataSource.filter((d) => d.status.includes("ƒêang x·ª≠ l√Ω")).length}
                </p>

                {/* B·∫£ng danh s√°ch */}
                <Card>
                    <Table
                        dataSource={dataSource}
                        columns={columns}
                        bordered
                        pagination={false}
                        scroll={{ x: true }}
                    />
                </Card>

                {/* Ph·∫ßn chi ti·∫øt th·ªùi gian & comment */}
                <div className="mt-6">
                    <Card
                        title="üïí Th·ªùi gian & ph·∫£n h·ªìi c·ªßa qu·∫£n l√Ω"
                        headStyle={{ background: "#004aad", color: "white" }}
                    >
                        {dataSource.map((req) => (
                            <div key={req.key} className="border-b border-gray-200 py-3">
                                <Text strong>{req.requestType}</Text>
                                <br />
                                <Text type="secondary">
                                    ‚è∞ Th·ªùi gian x·ª≠ l√Ω: {req.timeRange}
                                </Text>
                                <br />
                                <Text>
                                    üí¨ <strong>Comment c·ªßa qu·∫£n l√Ω:</strong> {req.managerComment}
                                </Text>
                            </div>
                        ))}
                    </Card>
                </div>
            </div>
        </AppLayout>
    );
}
